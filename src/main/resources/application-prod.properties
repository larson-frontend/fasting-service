# ===== Server / Port =====
server.port=${PORT:8080}
server.forward-headers-strategy=native

# ===== Datenbank (aus ENV-Werten zusammengesetzt) =====
spring.datasource.url=jdbc:postgresql://${DB_HOST:${PGHOST:localhost}}:${DB_PORT:${PGPORT:5432}}/${DB_NAME:${PGDATABASE:postgres}}?sslmode=require
spring.datasource.username=${DB_USER:${PGUSER:postgres}}
spring.datasource.password=${DB_PASSWORD:${PGPASSWORD:postgres}}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari: small footprint für Free/Small
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:5}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN:1}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ===== JPA =====
# Für echtes Prod später auf 'validate' + Flyway/Liquibase umstellen.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ===== Security =====
jwt.secret=${JWT_SECRET:change-me-in-prod}
jwt.expiration=${JWT_EXPIRATION:86400000}

# ===== CORS =====
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://your-frontend-domain.onrender.com}

# ===== Actuator / Logging =====
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

logging.level.com.larslab.fasting=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
