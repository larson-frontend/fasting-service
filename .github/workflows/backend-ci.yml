name: Backend CI

on:
  push:
    branches: [ develop, main, master, 'FEAT/**', 'fix/**' ]
  pull_request:
    branches: [ develop, main, master ]
  workflow_dispatch: {}

jobs:
  build-test:
    name: Build & Test (Maven + Testcontainers)
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: test-ci-secret-please-change-me-12345678901234567890
      # Ensure consistent Java memory for tests if needed
      MAVEN_OPTS: -Xmx1g
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Maven Test
        run: mvn -B -ntp test

      - name: Build Jar
        if: success()
        run: mvn -B -ntp -DskipTests package

      - name: Upload Artifact (Jar)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: fasting-service-jar
          path: target/*-SNAPSHOT.jar
          if-no-files-found: error

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_NAME: fasting-service
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ github.sha }}

      - name: Trivy Vulnerability Scan (Image)
        uses: aquasecurity/trivy-action@0.24.0
        with:
            image-ref: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            format: 'table'
            severity: 'CRITICAL,HIGH'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            timeout: 10m

      - name: Summary
        run: |
          echo "Image pushed: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
